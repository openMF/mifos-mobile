apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.dagger.hilt.android'

apply from: '../config/quality/quality.gradle'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "org.mifos.mobile"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        // A test runner provided by https://code.google.com/p/android-test-kit/
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        ndk {
            abiFilters "armeabi-v7a", "x86", "x86_64", "arm64-v8a"
        }

        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file("../default_key_store.jks")
            storePassword "mifos1234"
            keyAlias "mifos-mobile"
            keyPassword "mifos1234"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    sourceSets {
        def commonTestDir = 'src/commonTest/java'
        main {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
        test {
            java.srcDir commonTestDir
        }
    }

    compileOptions {
        incremental = false
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.4.4"
    }

    buildFeatures {
        viewBinding = true
    }

    kapt {
        correctErrorTypes = true
    }
}

dependencies {

    implementation project(':core')
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleExtensionsVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"
    kapt "com.github.Raizlabs.DBFlow:dbflow-processor:$rootProject.dbflowVersion"
    implementation "com.github.Raizlabs.DBFlow:dbflow-core:$rootProject.dbflowVersion"
    implementation "com.github.Raizlabs.DBFlow:dbflow:$rootProject.dbflowVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.supportLibraryVersion"
    implementation "com.google.android.material:material:$rootProject.designLibraryVersion"
    implementation "androidx.preference:preference:1.0.0"
    implementation "com.google.android.gms:play-services-maps:$rootProject.playServicesVersion"
    implementation "com.google.firebase:firebase-messaging:$rootProject.firebaseMessagingVersion"
    implementation "androidx.recyclerview:recyclerview:$rootProject.recyclerViewVersion"
    implementation "androidx.vectordrawable:vectordrawable:$rootProject.vectorDrawablesVersion"
    implementation "com.google.android.gms:play-services-oss-licenses:$rootProject.oss_licenses"
    implementation "com.isseiaoki:simplecropview:$rootProject.cropviewVersion"
    implementation "androidx.activity:activity-ktx:$activity_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    //Country Code picker
    implementation "com.hbb20:ccp:$rootProject.countryCodePicker"

    //Square dependencies
    implementation("com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion") {
        // exclude Retrofitâ€™s OkHttp peer-dependency module and define your own module import
        exclude module: 'okhttp'
    }
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okHttp3Version"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttp3Version"

    //rxjava Dependencies
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"

    //Butter Knife
    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    kapt "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    // Firebase Crashlytics dependency
    implementation "com.google.firebase:firebase-crashlytics:$firebaseCrashlyticsVersion"

    //Annotation library
    implementation "androidx.annotation:annotation:$rootProject.annotationLibraryVersion"

    //qr code
    implementation "com.google.zxing:core:$rootProject.zxingcoreVersion"
    implementation "me.dm7.barcodescanner:zxing:$rootProject.zxingbarcodescannerVersion"

    //sweet error dependency
    implementation "com.github.therajanmaurya:Sweet-Error:$rootProject.sweeterrorVersion"

    //mifos passcode
    implementation "com.mifos.mobile:mifos-passcode:$mifosPasscodeVersion"

    //multidex
    implementation "androidx.multidex:multidex:$rootProject.multiDexVersion"

    //TableView
    implementation "com.evrencoskun.library:tableview:$rootProject.tableViewVersion"

    //Biometric Authentication
    implementation "androidx.biometric:biometric:$rootProject.biometric"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutines"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.coroutinesTest"

    // Unit tests dependencies  
    testImplementation "junit:junit:$rootProject.jUnitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    implementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    implementation "org.mockito:mockito-android:$rootProject.mockitoVersion"
    androidTestImplementation "junit:junit:$rootProject.jUnitVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.mockitoVersion"
    androidTestImplementation "androidx.annotation:annotation:1.0.0"
    implementation "androidx.arch.core:core-testing:$rootProject.archCoreVersion"
    androidTestImplementation("androidx.test.espresso:espresso-contrib:$rootProject.espressoVersion") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.rulesVersion"

    implementation 'com.github.rahul-gill.mifos-ui-library:uihouse:alpha-2.1'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    // Hilt
    implementation("com.google.dagger:hilt-android:2.44")
    kapt("com.google.dagger:hilt-android-compiler:2.47")


    // Turbine
    testImplementation 'app.cash.turbine:turbine:1.0.0'

    // Compose BOM
    implementation platform('androidx.compose:compose-bom:2023.08.00')

    // Jetpack Compose
    implementation "androidx.compose.material:material:$rootProject.composeVersion"
    implementation "androidx.compose.compiler:compiler:$rootProject.composeCompiler"
    implementation "androidx.compose.ui:ui-tooling-preview:$rootProject.composeVersion"
    implementation "androidx.activity:activity-compose:$rootProject.composeActivity"
    debugImplementation "androidx.compose.ui:ui-tooling:$rootProject.composeVersion"
    implementation "androidx.compose.material3:material3:$rootProject.materialVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$rootProject.lifecycleVersion"

}
apply plugin: 'com.google.gms.google-services'
