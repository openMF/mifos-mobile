/**
 * Set up Checkstyle, Findbugs and PMD to perform extensive code analysis.
 *
 * Gradle tasks added:
 * - checkstyle
 * - findbugs
 * - pmd
 *
 * The three tasks above are added as dependencies of the check task so running check will
 * run all of them.
 */

apply plugin: 'checkstyle'
apply plugin: "com.github.spotbugs"
apply plugin: 'pmd'

dependencies {
    checkstyle 'com.puppycrawl.tools:checkstyle:6.19'
}
spotbugs {
    toolVersion = '4.7.3'
}

def qualityConfigDir = "$project.rootDir/config/quality"
def reportsDir = "$project.buildDir/reports"

check.dependsOn 'checkstyle',  'pmd'

task checkstyle(type: Checkstyle, group: 'Verification', description: 'Runs code style checks') {
    configFile file("$qualityConfigDir/checkstyle/checkstyle-config.xml")
    source 'src'
    include '**/*.java'

    reports {
        xml.enabled = true
        xml {
            destination file("$reportsDir/checkstyle/checkstyle.xml")
        }
    }

    classpath = files( )
}



tasks.matching {task -> task.name.startsWith('spotbugs')}.forEach {
    check.dependsOn it
    it.dependsOn(['compileDebugSources','compileReleaseSources'])
    it.group('Verification')
    it.description('Inspect java bytecode for bugs')

    it.ignoreFailures = false
    it.effort = "max"
    it.reportLevel = "high"
    it.excludeFilter = new File("$qualityConfigDir/findbugs/android-exclude-filter.xml")
    it.classes = files("$project.rootDir/app/build/intermediates/javac")

    it.source 'src'
    it.include '**/*.java'
    it.exclude '**/gen/**'

    it.reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination file("$reportsDir/findbugs/findbugs.xml")
        }
        html {
            destination file("$reportsDir/findbugs/findbugs.html")
        }
    }

    it.classpath = files()
}


task pmd(type: Pmd, group: 'Verification', description: 'Inspect sourcecode for bugs') {
    ruleSetFiles = files("$qualityConfigDir/pmd/pmd-ruleset.xml")
    ignoreFailures = false
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = true
        html.enabled = true
        xml {
            destination file("$reportsDir/pmd/pmd.xml")
        }
        html {
            destination file("$reportsDir/pmd/pmd.html")
        }
    }
}
